{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useAuthContext } from './useAuthContext';\nexport const useRegister = () => {\n  _s();\n  const [error, setError] = useState('');\n  const [spinner, setSpinner] = useState(true);\n  const {\n    dispatch\n  } = useAuthContext();\n  const register = async (name, email, password) => {\n    setSpinner(true);\n    setError(error);\n    const url = 'http://localhost:3000/user/register';\n    const data = {\n      name: name,\n      email: email,\n      password: password\n    };\n    const response = await axios.post(url, data);\n    if (response.status === 400) {\n      setSpinner(false);\n      setError(response.error);\n    }\n    if (response.status === 201) {\n      // save the user to local storage\n      localStorage.setItem('user', JSON.stringify(response));\n\n      // update the auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: response\n      });\n      setSpinner(true);\n    }\n  };\n  return {\n    register,\n    spinner,\n    error\n  };\n};\n_s(useRegister, \"synVIcmYqkZi3NDQzG1VUm0Sf68=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","axios","useAuthContext","useRegister","error","setError","spinner","setSpinner","dispatch","register","name","email","password","url","data","response","post","status","localStorage","setItem","JSON","stringify","type","payload"],"sources":["/Users/doheelee/Desktop/my-blog/client/src/hooks/useRegister.js"],"sourcesContent":["import { useState } from 'react'\nimport axios from 'axios'\nimport { useAuthContext } from './useAuthContext'\n\nexport const useRegister = () => {\n  const [error, setError] = useState('')\n  const [spinner, setSpinner] = useState(true)\n  const { dispatch } = useAuthContext()\n\n  const register = async (name, email, password) => {\n    setSpinner(true)\n    setError(error)\n\n    const url = 'http://localhost:3000/user/register'\n    const data = {\n      name: name,\n      email: email,\n      password: password,\n    }\n    const response = await axios.post(url, data)\n\n    if (response.status === 400) {\n      setSpinner(false)\n      setError(response.error)\n    }\n    if (response.status === 201) {\n      // save the user to local storage\n      localStorage.setItem('user', JSON.stringify(response))\n\n      // update the auth context\n      dispatch({ type: 'LOGIN', payload: response })\n      setSpinner(true)\n    }\n  }\n  return { register, spinner, error }\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,WAAW,GAAG,MAAM;EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM;IAAEQ;EAAS,CAAC,GAAGN,cAAc,EAAE;EAErC,MAAMO,QAAQ,GAAG,OAAOC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IAChDL,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAACD,KAAK,CAAC;IAEf,MAAMS,GAAG,GAAG,qCAAqC;IACjD,MAAMC,IAAI,GAAG;MACXJ,IAAI,EAAEA,IAAI;MACVC,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA;IACZ,CAAC;IACD,MAAMG,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAACH,GAAG,EAAEC,IAAI,CAAC;IAE5C,IAAIC,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MAC3BV,UAAU,CAAC,KAAK,CAAC;MACjBF,QAAQ,CAACU,QAAQ,CAACX,KAAK,CAAC;IAC1B;IACA,IAAIW,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MAC3B;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAAC,CAAC;;MAEtD;MACAP,QAAQ,CAAC;QAAEc,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAER;MAAS,CAAC,CAAC;MAC9CR,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC;EACD,OAAO;IAAEE,QAAQ;IAAEH,OAAO;IAAEF;EAAM,CAAC;AACrC,CAAC;AAAA,GA/BYD,WAAW;EAAA,QAGDD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}