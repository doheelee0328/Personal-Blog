{"ast":null,"code":"var _jsxFileName = \"/Users/doheelee/Desktop/my-blog/client/src/pages/register/register.jsx\",\n  _s = $RefreshSig$();\nimport loginImage from '../../image/Login.webp';\nimport { LoginWrapper } from '../login/Login.styled';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useToastMessage } from '../../context/Toast';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { setName, setEmail, setPassword, setConfirmPassword } from '../../components/action';\nimport { useRegister } from '../../hooks/useRegister';\nimport Spinner from '../../components/spinner/Spinner';\nimport { SpinnerRegisterContainer } from '../../components/spinner/Spinner.styled';\nimport { ToastContainer } from 'react-toastify';\nimport '../../scss/loginRegister.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = _ref => {\n  _s();\n  let {\n    registerLink\n  } = _ref;\n  const email = useSelector(state => state.user.email);\n  const name = useSelector(state => state.user.name);\n  const password = useSelector(state => state.user.password);\n  const confirmPassword = useSelector(state => state.user.confirmPassword);\n  const {\n    register,\n    spinner\n  } = useRegister();\n  const {\n    errorMessage\n  } = useToastMessage();\n  const dispatch = useDispatch();\n  const toastContainerStyle = {\n    width: 'auto'\n  };\n  const submitRegisterHandler = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      errorMessage('Passwords do not match');\n    } else {\n      await register(name, email, password);\n    }\n    console.log(name, email, password, confirmPassword);\n    dispatch(setEmail(''));\n    dispatch(setName(''));\n    dispatch(setPassword(''));\n    dispatch(setConfirmPassword(''));\n  };\n  return /*#__PURE__*/_jsxDEV(LoginWrapper, {\n    loginImage: loginImage,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitRegisterHandler,\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"form-header\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-password-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          onChange: e => dispatch(setName(e.target.value)),\n          value: name,\n          className: \"inputs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: e => dispatch(setEmail(e.target.value)),\n          value: email,\n          className: \"inputs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: e => dispatch(setPassword(e.target.value)),\n          value: password,\n          className: \"inputs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirmPassword\",\n          onChange: e => dispatch(setConfirmPassword(e.target.value)),\n          value: confirmPassword,\n          className: \"inputs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"buttons\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"another-direction\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"new-user\",\n          children: \"Already A User?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"link-different-page\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: registerLink,\n            className: \"link-different-pages\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpinnerRegisterContainer, {\n      children: spinner && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      style: toastContainerStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"DJJL76O9SRKCsFF5apbdTqo2f9Q=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useRegister, useToastMessage, useDispatch];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["loginImage","LoginWrapper","Link","useSelector","useDispatch","useToastMessage","setName","setEmail","setPassword","setConfirmPassword","useRegister","Spinner","SpinnerRegisterContainer","ToastContainer","Register","registerLink","email","state","user","name","password","confirmPassword","register","spinner","errorMessage","dispatch","toastContainerStyle","width","submitRegisterHandler","e","preventDefault","console","log","target","value"],"sources":["/Users/doheelee/Desktop/my-blog/client/src/pages/register/register.jsx"],"sourcesContent":["import loginImage from '../../image/Login.webp'\nimport { LoginWrapper } from '../login/Login.styled'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useToastMessage } from '../../context/Toast'\nimport 'react-toastify/dist/ReactToastify.css'\nimport {\n  setName,\n  setEmail,\n  setPassword,\n  setConfirmPassword,\n} from '../../components/action'\nimport { useRegister } from '../../hooks/useRegister'\nimport Spinner from '../../components/spinner/Spinner'\nimport { SpinnerRegisterContainer } from '../../components/spinner/Spinner.styled'\nimport { ToastContainer } from 'react-toastify'\n\nimport '../../scss/loginRegister.scss'\n\nconst Register = ({ registerLink }) => {\n  const email = useSelector((state) => state.user.email)\n  const name = useSelector((state) => state.user.name)\n  const password = useSelector((state) => state.user.password)\n  const confirmPassword = useSelector((state) => state.user.confirmPassword)\n\n  const { register, spinner } = useRegister()\n  const { errorMessage } = useToastMessage()\n\n  const dispatch = useDispatch()\n\n  const toastContainerStyle = {\n    width: 'auto',\n  }\n\n  const submitRegisterHandler = async (e) => {\n    e.preventDefault()\n\n    if (password !== confirmPassword) {\n      errorMessage('Passwords do not match')\n    } else {\n      await register(name, email, password)\n    }\n\n    console.log(name, email, password, confirmPassword)\n\n    dispatch(setEmail(''))\n    dispatch(setName(''))\n    dispatch(setPassword(''))\n    dispatch(setConfirmPassword(''))\n  }\n  return (\n    <LoginWrapper loginImage={loginImage}>\n      <form onSubmit={submitRegisterHandler} className='form-container'>\n        <h1 className='form-header'>Register</h1>\n        <div className='email-password-container'>\n          <label className='labels'>Name</label>\n          <input\n            type='text'\n            name='name'\n            onChange={(e) => dispatch(setName(e.target.value))}\n            value={name}\n            className='inputs'\n          />\n          <label className='labels'>Email</label>\n          <input\n            type='email'\n            name='email'\n            onChange={(e) => dispatch(setEmail(e.target.value))}\n            value={email}\n            className='inputs'\n          />\n          <label className='labels'>Password</label>\n          <input\n            type='password'\n            name='password'\n            onChange={(e) => dispatch(setPassword(e.target.value))}\n            value={password}\n            className='inputs'\n          />\n          <label className='labels'>Confirm Password</label>\n          <input\n            type='password'\n            name='confirmPassword'\n            onChange={(e) => dispatch(setConfirmPassword(e.target.value))}\n            value={confirmPassword}\n            className='inputs'\n          />\n        </div>\n        <button type='submit' className='buttons'>\n          Register\n        </button>\n        <div className='another-direction'>\n          <p className='new-user'>Already A User?</p>\n          <Link to='/login' className='link-different-page'>\n            <p onClick={registerLink} className='link-different-pages'>\n              Login\n            </p>\n          </Link>\n        </div>\n      </form>\n      <SpinnerRegisterContainer>\n        {spinner && <Spinner />}\n      </SpinnerRegisterContainer>\n      <ToastContainer style={toastContainerStyle} />\n    </LoginWrapper>\n  )\n}\n\nexport default Register\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}