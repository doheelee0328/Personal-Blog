{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useAuthContext } from './useAuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\nexport const useRegister = () => {\n  _s();\n  const [error, setError] = useState('');\n  const [spinner, setSpinner] = useState(false);\n  const {\n    dispatch\n  } = useAuthContext();\n  const errorMessage = message => {\n    toast.error(message, {\n      position: 'top-center',\n      transition: 'slide',\n      background: '#333',\n      color: '#fff'\n    });\n  };\n  const successMessage = message => {\n    toast.success(message, {\n      position: 'top-center',\n      transition: 'slide',\n      background: '#333',\n      color: '#fff'\n    });\n  };\n  const register = async (name, email, password) => {\n    setSpinner(true);\n    const url = 'http://localhost:3000/user/register';\n    const data = {\n      name: name,\n      email: email,\n      password: password\n    };\n    try {\n      const response = await axios.post(url, data);\n      if (response.status === 200) {\n        dispatch({\n          type: 'Login',\n          payload: response.data\n        });\n        localStorage.setItem('user', JSON.stringify(response.data));\n        setSpinner(true);\n        successMessage('Registered successfully');\n      }\n    } catch (error) {\n      setSpinner(false);\n      errorMessage(error.response.data.error);\n      console.log(error.response.data.error);\n    }\n  };\n  return {\n    register,\n    spinner,\n    error,\n    setError\n  };\n};\n_s(useRegister, \"w4X2i+/Td/Jj6RQMNPnXO4OUEsA=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","axios","useAuthContext","ToastContainer","toast","useRegister","error","setError","spinner","setSpinner","dispatch","errorMessage","message","position","transition","background","color","successMessage","success","register","name","email","password","url","data","response","post","status","type","payload","localStorage","setItem","JSON","stringify","console","log"],"sources":["/Users/doheelee/Desktop/my-blog/client/src/hooks/useRegister.js"],"sourcesContent":["import { useState } from 'react'\nimport axios from 'axios'\nimport { useAuthContext } from './useAuthContext'\nimport { ToastContainer, toast } from 'react-toastify'\n\nexport const useRegister = () => {\n  const [error, setError] = useState('')\n  const [spinner, setSpinner] = useState(false)\n  const { dispatch } = useAuthContext()\n\n  const errorMessage = (message) => {\n    toast.error(message, {\n      position: 'top-center',\n      transition: 'slide',\n      background: '#333',\n      color: '#fff',\n    })\n  }\n\n  const successMessage = (message) => {\n    toast.success(message, {\n      position: 'top-center',\n      transition: 'slide',\n      background: '#333',\n      color: '#fff',\n    })\n  }\n\n  const register = async (name, email, password) => {\n    setSpinner(true)\n\n    const url = 'http://localhost:3000/user/register'\n    const data = {\n      name: name,\n      email: email,\n      password: password,\n    }\n\n    try {\n      const response = await axios.post(url, data)\n      if (response.status === 200) {\n        dispatch({ type: 'Login', payload: response.data })\n        localStorage.setItem('user', JSON.stringify(response.data))\n        setSpinner(true)\n        successMessage('Registered successfully')\n      }\n    } catch (error) {\n      setSpinner(false)\n      errorMessage(error.response.data.error)\n      console.log(error.response.data.error)\n    }\n  }\n\n  return { register, spinner, error, setError }\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AAEtD,OAAO,MAAMC,WAAW,GAAG,MAAM;EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM;IAAEU;EAAS,CAAC,GAAGR,cAAc,EAAE;EAErC,MAAMS,YAAY,GAAIC,OAAO,IAAK;IAChCR,KAAK,CAACE,KAAK,CAACM,OAAO,EAAE;MACnBC,QAAQ,EAAE,YAAY;MACtBC,UAAU,EAAE,OAAO;MACnBC,UAAU,EAAE,MAAM;MAClBC,KAAK,EAAE;IACT,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,cAAc,GAAIL,OAAO,IAAK;IAClCR,KAAK,CAACc,OAAO,CAACN,OAAO,EAAE;MACrBC,QAAQ,EAAE,YAAY;MACtBC,UAAU,EAAE,OAAO;MACnBC,UAAU,EAAE,MAAM;MAClBC,KAAK,EAAE;IACT,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,QAAQ,GAAG,OAAOC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IAChDb,UAAU,CAAC,IAAI,CAAC;IAEhB,MAAMc,GAAG,GAAG,qCAAqC;IACjD,MAAMC,IAAI,GAAG;MACXJ,IAAI,EAAEA,IAAI;MACVC,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA;IACZ,CAAC;IAED,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,IAAI,CAACH,GAAG,EAAEC,IAAI,CAAC;MAC5C,IAAIC,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3BjB,QAAQ,CAAC;UAAEkB,IAAI,EAAE,OAAO;UAAEC,OAAO,EAAEJ,QAAQ,CAACD;QAAK,CAAC,CAAC;QACnDM,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ,CAACD,IAAI,CAAC,CAAC;QAC3Df,UAAU,CAAC,IAAI,CAAC;QAChBQ,cAAc,CAAC,yBAAyB,CAAC;MAC3C;IACF,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdG,UAAU,CAAC,KAAK,CAAC;MACjBE,YAAY,CAACL,KAAK,CAACmB,QAAQ,CAACD,IAAI,CAAClB,KAAK,CAAC;MACvC4B,OAAO,CAACC,GAAG,CAAC7B,KAAK,CAACmB,QAAQ,CAACD,IAAI,CAAClB,KAAK,CAAC;IACxC;EACF,CAAC;EAED,OAAO;IAAEa,QAAQ;IAAEX,OAAO;IAAEF,KAAK;IAAEC;EAAS,CAAC;AAC/C,CAAC;AAAA,GAjDYF,WAAW;EAAA,QAGDH,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}