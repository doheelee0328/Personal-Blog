{"ast":null,"code":"var _jsxFileName = \"/Users/doheelee/Desktop/my-blog/client/src/pages/editProfile/ EditProfile.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport img from '../../image/blankProfile.webp';\nimport '../../scss/editProfile.scss';\nimport { useAuthContext } from '../../hooks/useAuthContext';\nimport { useEffect } from 'react';\nimport { useEditUser } from '../../hooks/useEditUser';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setName, setEmail, setPassword, setConfirmPassword } from '../../components/action';\nimport { useToastMessage } from '../../context/Toast';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Spinner from '../../components/spinner/Spinner';\nimport { SpinnerEditContainer } from '../../components/spinner/Spinner.styled';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditProfile = () => {\n  _s();\n  const {\n    user\n  } = useAuthContext();\n  const name = useSelector(state => user ? state.user.name : '');\n  const email = useSelector(state => user ? state.user.email : '');\n  const password = useSelector(state => state.user.password || '');\n  const confirmPassword = useSelector(state => state.user.confirmPassword || '');\n  const {\n    errorMessage\n  } = useToastMessage();\n  const dispatch = useDispatch();\n  const {\n    editProfiles,\n    spinner\n  } = useEditUser();\n\n  // Update the input values when the user changes\n  useEffect(() => {\n    if (user) {\n      dispatch(setName(user.name));\n      dispatch(setEmail(user.email));\n    }\n  }, [user, dispatch]);\n  const updateUser = async () => {\n    if (password !== confirmPassword) {\n      errorMessage('Passwords do not match');\n    } else {\n      await editProfiles(name, email, password);\n    }\n    dispatch(setPassword(''));\n    dispatch(setConfirmPassword(''));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forms\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"more-form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: img,\n            alt: \"edit-profile\",\n            className: \"edit-profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email-password \",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"inputs\",\n              value: name,\n              onChange: e => dispatch(setName(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              className: \"inputs\",\n              value: email,\n              onChange: e => dispatch(setEmail(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"inputs\",\n              onChange: e => dispatch(setPassword(e.target.value)),\n              value: password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"inputs\",\n              value: confirmPassword,\n              onChange: e => dispatch(setConfirmPassword(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-containers\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"profile-buttons\",\n              onClick: updateUser,\n              children: \"Edit Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"profile-buttons\",\n              children: \"Delete Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SpinnerEditContainer, {\n        children: spinner && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(EditProfile, \"h6vQgbVcEgsqwGksRp4Ldtqpb3Q=\", false, function () {\n  return [useAuthContext, useSelector, useSelector, useSelector, useSelector, useToastMessage, useDispatch, useEditUser];\n});\n_c = EditProfile;\nexport default EditProfile;\nvar _c;\n$RefreshReg$(_c, \"EditProfile\");","map":{"version":3,"names":["React","img","useAuthContext","useEffect","useEditUser","useSelector","useDispatch","setName","setEmail","setPassword","setConfirmPassword","useToastMessage","Spinner","SpinnerEditContainer","EditProfile","user","name","state","email","password","confirmPassword","errorMessage","dispatch","editProfiles","spinner","updateUser","e","target","value"],"sources":["/Users/doheelee/Desktop/my-blog/client/src/pages/editProfile/ EditProfile.jsx"],"sourcesContent":["import React from 'react'\nimport img from '../../image/blankProfile.webp'\nimport '../../scss/editProfile.scss'\nimport { useAuthContext } from '../../hooks/useAuthContext'\nimport { useEffect } from 'react'\nimport { useEditUser } from '../../hooks/useEditUser'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setName,\n  setEmail,\n  setPassword,\n  setConfirmPassword,\n} from '../../components/action'\nimport { useToastMessage } from '../../context/Toast'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Spinner from '../../components/spinner/Spinner'\nimport { SpinnerEditContainer } from '../../components/spinner/Spinner.styled'\n\nconst EditProfile = () => {\n  const { user } = useAuthContext()\n\n  const name = useSelector((state) => (user ? state.user.name : ''))\n  const email = useSelector((state) => (user ? state.user.email : ''))\n  const password = useSelector((state) => state.user.password || '')\n  const confirmPassword = useSelector(\n    (state) => state.user.confirmPassword || ''\n  )\n\n  const { errorMessage } = useToastMessage()\n\n  const dispatch = useDispatch()\n\n  const { editProfiles, spinner } = useEditUser()\n\n  // Update the input values when the user changes\n  useEffect(() => {\n    if (user) {\n      dispatch(setName(user.name))\n      dispatch(setEmail(user.email))\n    }\n  }, [user, dispatch])\n\n  const updateUser = async () => {\n    if (password !== confirmPassword) {\n      errorMessage('Passwords do not match')\n    } else {\n      await editProfiles(name, email, password)\n    }\n\n    dispatch(setPassword(''))\n    dispatch(setConfirmPassword(''))\n  }\n\n  return (\n    <>\n      <div className='background-profile'>\n        <div className='forms'>\n          <div className='more-form-container'>\n            <img src={img} alt='edit-profile' className='edit-profile' />\n            <div className='email-password '>\n              <label className='labels'>Name</label>\n              <input\n                type='text'\n                className='inputs'\n                value={name}\n                onChange={(e) => dispatch(setName(e.target.value))}\n              />\n              <label className='labels'>Email</label>\n\n              <input\n                type='email'\n                name='email'\n                className='inputs'\n                value={email}\n                onChange={(e) => dispatch(setEmail(e.target.value))}\n              />\n\n              <label className='labels'>Password</label>\n              <input\n                type='password'\n                className='inputs'\n                onChange={(e) => dispatch(setPassword(e.target.value))}\n                value={password}\n              />\n              <label className='labels'>Confirm Password</label>\n              <input\n                type='password'\n                className='inputs'\n                value={confirmPassword}\n                onChange={(e) => dispatch(setConfirmPassword(e.target.value))}\n              />\n            </div>\n            <div className='button-containers'>\n              <button className='profile-buttons' onClick={updateUser}>\n                Edit Profile\n              </button>\n              <button className='profile-buttons'>Delete Profile</button>\n            </div>\n          </div>\n        </div>\n        <SpinnerEditContainer>{spinner && <Spinner />}</SpinnerEditContainer>\n      </div>\n    </>\n  )\n}\n\nexport default EditProfile\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}